#!/bin/bash

# MuxTerm CLI Command
# This provides the "muxterm" command globally

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Function to print colored output
print_color() {
    echo -e "${2}${1}${NC}"
}

# Find MuxTerm installation
find_muxterm_dir() {
    # Check common installation paths
    for dir in /opt/muxterm /usr/local/muxterm ~/muxterm; do
        if [ -f "$dir/package.json" ] && grep -q '"name": "muxterm"' "$dir/package.json" 2>/dev/null; then
            echo "$dir"
            return 0
        fi
    done
    
    # Check if we're in the MuxTerm directory
    if [ -f "./package.json" ] && grep -q '"name": "muxterm"' "./package.json" 2>/dev/null; then
        echo "$(pwd)"
        return 0
    fi
    
    return 1
}

# Main command handler
case "$1" in
    update)
        MUXTERM_DIR=$(find_muxterm_dir)
        if [ -z "$MUXTERM_DIR" ]; then
            print_color "Error: MuxTerm installation not found" "$RED"
            exit 1
        fi
        
        if [ -f "$MUXTERM_DIR/update.sh" ]; then
            cd "$MUXTERM_DIR"
            # Check for --yes or -y flag
            if [ "$2" = "--yes" ] || [ "$2" = "-y" ]; then
                echo "y" | bash update.sh
            else
                exec bash update.sh
            fi
        else
            print_color "Error: Update script not found" "$RED"
            exit 1
        fi
        ;;
        
    version)
        MUXTERM_DIR=$(find_muxterm_dir)
        if [ -z "$MUXTERM_DIR" ]; then
            print_color "Error: MuxTerm installation not found" "$RED"
            exit 1
        fi
        
        if [ -f "$MUXTERM_DIR/package.json" ]; then
            VERSION=$(grep '"version":' "$MUXTERM_DIR/package.json" | sed -E 's/.*"([^"]+)".*/\1/')
            print_color "MuxTerm v$VERSION" "$GREEN"
        else
            print_color "Error: Unable to determine version" "$RED"
            exit 1
        fi
        ;;
        
    configure-windows-autostart)
        # Check if we're in WSL
        if [[ -z "$WSL_DISTRO_NAME" ]] && ! grep -qi microsoft /proc/version 2>/dev/null; then
            print_color "Error: This command is only available in WSL" "$RED"
            exit 1
        fi
        
        MUXTERM_DIR=$(find_muxterm_dir)
        if [ -z "$MUXTERM_DIR" ]; then
            print_color "Error: MuxTerm installation not found" "$RED"
            exit 1
        fi
        
        # Source the installer functions
        if [ -f "$MUXTERM_DIR/install.sh" ]; then
            # Extract just the functions we need
            source <(sed -n '/^configure_windows_autostart()/,/^}/p; /^setup_windows_task()/,/^}/p; /^create_startup_batch()/,/^}/p' "$MUXTERM_DIR/install.sh")
            configure_windows_autostart
        else
            print_color "Error: Configuration script not found" "$RED"
            exit 1
        fi
        ;;
        
    help|--help|-h|"")
        print_color "MuxTerm - Web-based Terminal Multiplexer" "$BLUE"
        echo ""
        echo "Usage: muxterm [command]"
        echo ""
        echo "Commands:"
        echo "  update [--yes|-y]           Check for updates and install if available"
        echo "                              Use --yes or -y to skip confirmation prompt"
        echo "  version                     Show current MuxTerm version"
        echo "  configure-windows-autostart Configure Windows autostart (WSL only)"
        echo "  help                        Show this help message"
        echo ""
        echo "For more information, visit: https://github.com/tecnologicachile/muxterm"
        ;;
        
    *)
        print_color "Unknown command: $1" "$RED"
        echo "Run 'muxterm help' for usage information"
        exit 1
        ;;
esac